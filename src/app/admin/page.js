"use client";
import { useState, useRef, useEffect } from "react";
import { Editor, EditorState, RichUtils, convertToRaw, Modifier } from "draft-js";
import { stateToHTML } from "draft-js-export-html"; // Convert Draft.js content to HTML
import "draft-js/dist/Draft.css";

// Custom font size styles
const styleMap = {
    SMALL: { fontSize: "12px" },
    MEDIUM: { fontSize: "16px" },
    LARGE: { fontSize: "20px" },
};
export default function Page() {
    const [editorState, setEditorState] = useState(EditorState.createEmpty());
    const editorRef = useRef(null);

    // Handle text formatting (bold, italic)
    const handleStyleChange = (style) => {
        setEditorState(RichUtils.toggleInlineStyle(editorState, style));
    };

    // Handle block formatting (lists)
    const handleBlockChange = (blockType) => {
        setEditorState(RichUtils.toggleBlockType(editorState, blockType));
    };

    // Handle font size changes
    const toggleFontSize = (size) => {
        setEditorState(RichUtils.toggleInlineStyle(editorState, size));
    };

    // Add a link to the selected text
    const addLink = () => {
        const url = prompt("Enter the URL:"); // Get URL from the user
        if (!url) return;

        const contentState = editorState.getCurrentContent();
        const selection = editorState.getSelection();

        // Create an entity for the link
        const contentStateWithEntity = contentState.createEntity("LINK", "MUTABLE", { url });
        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();

        // Apply the entity to selected text
        const newContentState = Modifier.applyEntity(contentStateWithEntity, selection, entityKey);
        setEditorState(EditorState.push(editorState, newContentState, "apply-entity"));
    };


    // Convert editor content to HTML
    // Convert editor content to HTML
    const getHTML = () => {
        const contentState = editorState.getCurrentContent();
        return stateToHTML(contentState, {
            entityStyleFn: (entity) => {
                const data = entity.getData();
                if (entity.getType() === "LINK") {
                    return { element: "a", attributes: { href: data.url, target: "_blank" } };
                }
                return undefined;
            },
            inlineStyleFn: (style) => {
                if (style.has("SMALL")) {
                    return { element: "span", style: { fontSize: "12px" } };
                }
                if (style.has("MEDIUM")) {
                    return { element: "span", style: { fontSize: "16px" } };
                }
                if (style.has("LARGE")) {
                    return { element: "span", style: { fontSize: "20px" } };
                }
            },
        });
    };
    useEffect(() => {
        if (editorRef.current) {
            editorRef.current.focus();
        }
    }, []); // Focus the editor when the component mounts

    console.log(getHTML());
    return (
        <div className="border p-4 mt-52 rounded-lg max-w-2xl mx-auto">
            <h2 className="text-lg font-semibold mb-2">Draft.js Rich Text Editor</h2>

            {/* Formatting Buttons */}
            <div className="mb-2 space-x-2">
                <button onClick={() => handleStyleChange("BOLD")} className="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">
                    Bold
                </button>
                <button onClick={() => handleStyleChange("ITALIC")} className="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">
                    Italic
                </button>
                <button onClick={() => handleBlockChange("unordered-list-item")} className="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">
                    Bullet List
                </button>
                <button onClick={() => handleBlockChange("ordered-list-item")} className="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">
                    Numbered List
                </button>
                <button onClick={addLink} className="px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600">
                    Add Link
                </button>
            </div>

            {/* Font Size Buttons */}
            <div className="mb-2 space-x-2">
                <button onClick={() => toggleFontSize("SMALL")}>Small</button>
                <button onClick={() => toggleFontSize("MEDIUM")}>Medium</button>
                <button onClick={() => toggleFontSize("LARGE")}>Large</button>
            </div>

            {/* Editor Container */}
            <div className="border p-3 min-h-[150px] cursor-text rounded" onClick={() => editorRef.current?.focus()}>
                <Editor ref={editorRef} editorState={editorState} onChange={setEditorState} customStyleMap={styleMap} />
            </div>

            {/* Button to Get HTML Output */}
            <button onClick={() => alert(getHTML())} className="mt-4 bg-green-500 text-white px-4 py-2 rounded">
                Get HTML Output
            </button>


            <h3>Generated HTML:</h3>
            <div dangerouslySetInnerHTML={{ __html: getHTML() }} />

            {/* <p><span style="font-size: 20px"><strong>Ultimate MS Office Journey: Excel ржерзЗржХрзЗ Power BI ржкрж░рзНржпржирзНржд MS Office-ржПрж░ ржкрзВрж░рзНржгрж╛ржЩрзНржЧ ржЬрж╛рж░рзНржирж┐!</strong></span></p>
            <p>ржЖржкржирж┐ &nbsp;ржХрж┐ ржорж╛ржЗржХрзНрж░рзЛрж╕ржлржЯ ржЕржлрж┐рж╕рзЗрж░ ржПржХрзНрж╕рзЗрж▓, ржУрзЯрж╛рж░рзНржб, ржПржмржВ ржкрж╛ржУрзЯрж╛рж░ ржкрзЯрзЗржирзНржЯрзЗрж░ ржмрзЗрж╕рж┐ржХ ржерзЗржХрзЗ &nbsp;ржЕрзНржпрж╛ржбржнрж╛ржирзНрж╕ рж╕рзНржХрж┐рж▓ ржЕрж░рзНржЬржи ржХрж░рждрзЗ ржЪрж╛ржи? ржЕржержмрж╛ ржбрзЗржЯрж╛ ржЕрзНржпрж╛ржирж╛рж▓рж╛ржЗрж╕рж┐рж╕ ржПржмржВ &nbsp;ржнрж┐ржЬрзНржпрзБрзЯрж╛рж▓рж╛ржЗржЬрзЗрж╢ржирзЗрж░ ржЕрж╕рж╛ржзрж╛рж░ржг ржжрзБржирж┐рзЯрж╛рзЯ Power BI-ржПрж░ ржорждрзЛ ржЯрзБрж▓ ржжрж┐рзЯрзЗ ржирж┐ржЬрзЗрж░ &nbsp;ржХрзНржпрж╛рж░рж┐рзЯрж╛рж░ржХрзЗ ржирждрзБржи ржЙржЪрзНржЪрждрж╛рзЯ ржирж┐рзЯрзЗ ржпрзЗрждрзЗ ржЪрж╛ржи? рждрж╛рж╣рж▓рзЗ ржПржЗ ржХрзЛрж░рзНрж╕ ржЖржкржирж╛рж░ ржЬржирзНржп ржПржХржжржо &nbsp;ржкрж╛рж░ржлрзЗржХрзНржЯ!</p>
            <p>ржЖржкржирж┐ ржЪрж╛ржЗрж▓рзЗ рж╢рзБржзрзБржорж╛рждрзНрж░ <strong>MS Excel рж▓рж╛ржЗржн ржХрзЛрж░рзНрж╕рзЗржУ</strong> ржЕржВрж╢ ржирж┐рждрзЗ ржкрж╛рж░ржмрзЗржиред ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЬрж╛ржирждрзЗ ржкрзБрж░рзЛ рж▓рзЗржЦрж╛ ржкрзЬрзБржиред</p>
            <p><strong>тЬЕ рзлрзп рждржо ржмрзНржпрж╛ржЪрзЗрж░ ржХрзНрж▓рж╛рж╕ рж╢рзБрж░рзБ рж╣ржмрзЗ рзжрзм ржорж╛рж░рзНржЪ рзирзжрзирзлржЗржВ ржерзЗржХрзЗред</strong></p>
            <p><strong>тЬЕ ржХрзНрж▓рж╛рж╕ рж╕ржоржпрж╝рж╕рзВржЪрзА</strong></p>
            <ul>
                <li><strong>рж░рж╛ржд рззрзж:рззрзл ржерзЗржХрзЗ рззрзз:рзжрзж ржорж┐ржирж┐ржЯ ржкрж░рзНржпржирзНрждред (ржмрж┐:ржжрзНрж░: </strong>рж░ржоржЬрж╛ржи &nbsp;ржорж╛рж╕ рж╢рзЗрж╖ рж╣ржУржпрж╝рж╛рж░ ржкрж░, ржЕрж░рзНржерж╛рзО ржИржжрзЗрж░ ржкрж░рзЗ, ржХрзНрж▓рж╛рж╕рзЗрж░ рж╕ржоржпрж╝рж╕рзВржЪрж┐ ржкрж░рж┐ржмрж░рзНрждрж┐ржд рж╣ржмрзЗред &nbsp;ржирждрзБржи рж╕ржоржпрж╝рж╕рзВржЪрж┐ рж╣ржмрзЗ рж░рж╛ржд рзп:рзйрзж ржерзЗржХрзЗ рззрзз:рзжрзж ржкрж░рзНржпржирзНржд ржЕржирзБрж╖рзНржарж┐ржд рж╣ржмрзЗред)</li>
                <li><strong>ржПржХрзНрж╕рзЗрж▓рзЗрж░ ржХрзНрж▓рж╛рж╕ рж╣ржмрзЗ ржкрзНрж░рждрж┐ ржмрзБржзржмрж╛рж░ ржПржмржВ ржмрзГрж╣рж╕рзНржкрждрж┐ржмрж╛рж░ред </strong>ржпржжрж┐ ржЖржкржирж┐ <strong>Power BI and Query</strong> ржП ржУ ржнрж░рзНрждрж┐ рж╣рждрзЗ ржЪрж╛ржи рждрж╛рж╣рж▓рзЗ ржкрзНрж░ржержорзЗ ржПржХрзНрж╕рзЗрж▓рзЗрж░ ржХрзНрж▓рж╛рж╕ рж╣ржмрзЗ, ржПржХрзНрж╕рзЗрж▓рзЗрж░ рж╕ржорж╕рзНржд ржХрзНрж▓рж╛рж╕ рж╢рзЗрж╖ рж╣рж▓рзЗ <strong>Power Query ржПржмржВ Power BI</strong> ржПрж░ ржХрзНрж▓рж╛рж╕ рж╢рзБрж░рзБ рж╣ржмрзЗред <strong>Power Query ржПржмржВ Power BI</strong> ржПрж░ ржХрзНрж▓рж╛рж╕ рж╣ржмрзЗ <strong>рж╢рзБржХрзНрж░ржмрж╛рж░, рж╕рзЛржоржмрж╛рж░ ржПржмржВ ржмрзБржзржмрж╛рж░</strong>ред</li>
                <li>ржкрж╛ржУрзЯрж╛рж░ржкрзЯрзЗржирзНржЯ ржПржмржВ ржУрзЯрж╛рж░рзНржбрзЗрж░ <strong>Only Recorded Videos</strong> ржжрзЗржУрзЯрж╛ рж╣ржмрзЗред ржХрзЛржи рж▓рж╛ржЗржн ржХрзНрж▓рж╛рж╕ рж╣ржмрзЗржирж╛ред</li>
            </ul>
            <p>тЬЕ <strong>ржХрзНрж▓рж╛рж╕ рж╕ржВржЦрзНржпрж╛</strong></p>
            <ul>
                <li><strong>MS Excel</strong> тАУ рж╕рж░рзНржмржирж┐ржорзНржи рззрзмржЯрж┐ ржерзЗржХрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ рзирзкржЯрж┐ ржХрзНрж▓рж╛рж╕ рж╣ржмрзЗред</li>
                <li><strong>Power Query and BI</strong> - ржорж┐ржирж┐ржорж╛ржо рззрзиржЯрж┐ ржХрзНрж▓рж╛рж╕ рж╣ржмрзЗред</li>
                <li><strong>MS PowerPoint</strong> - ржорж┐ржирж┐ржорж╛ржо рззрзжржЯрж┐ рж▓рж╛ржЗржн ржХрзНрж▓рж╛рж╕рзЗрж░ рж░рзЗржХрж░рзНржбрзЗржб ржнрж┐ржбрж┐ржУред</li>
                <li><strong>MS Word</strong> - ржорж┐ржирж┐ржорж╛ржо рззрзжржЯрж┐ рж▓рж╛ржЗржн ржХрзНрж▓рж╛рж╕рзЗрж░ рж░рзЗржХрж░рзНржбрзЗржб ржнрж┐ржбрж┐ржУред</li>
            </ul>
            <h3><strong>ЁЯУШ ржХрзЛрж░рзНрж╕рзЗрж░ ржоржбрж┐ржЙрж▓</strong></h3>
            <p>ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржоржбрж┐ржЙрж▓ ржжрзЗржЦрждрзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи:</p>
            <ul>
                <li>MS Excel тАУ <a href="facebool.com" target="_blank"><u>ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи</u></a></li>
                <li>MS PowerPoint тАУ <a href="https://drive.google.com/file/d/1uEzfo4YYyKRNFbxLORECz9VfI-b5aaog/view?usp=sharing" target="_blank"><u>ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи</u></a></li>
                <li>MS Word тАУ <a href="https://drive.google.com/file/d/12Kz-ksD3fmGLQN5Pl7pRd_cyXLg9lfxG/view?usp=sharing" target="_blank"><u>ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи</u></a></li>
                <li>Power Query and BI - <a href="https://drive.google.com/file/d/1SDx4E1WfKEbwo1gz39uuG0cXUyzP0tKB/view?usp=sharing" target="_blank"><u>ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи</u></a></li>
            </ul> */}





        </div>
    );
}
